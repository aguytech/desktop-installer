#!/bin/bash
#
# write by Aguy

_SCRIPT=$(basename "$0") && _SCRIPT=${_SCRIPT%.*} && _PATH_BASE="$(dirname "$(readlink -e "$0")")" && _PATH_BASE_SUB="${_PATH_BASE}/sub"
FILE="/etc/server/server.conf"
! [ "$S_GLOBAL_CONF" ] && if ! . "$FILE"; then echo -e "\e[1;31merror - unable to find file '$FILE'\e[0;0m"; exit 1; fi || . "$S_GLOBAL_CONF"
FILE="${_PATH_BASE}/../../inc-functions-lite"
if ! . "$FILE"; then echo -e "\e[1;31merror - unable to find file '$FILE'\e[0;0m"; exit 1; fi

echo "####################  $_SCRIPT  ####################"

S_RELEASE_NAME=xenialg
_PATH_LOG=/var/log/server/install
S_FILE_INSTALL_CONF="${_PATH_LOG}/${_SCRIPT}.conf"
S_FILE_INSTALL_DONE="${_PATH_LOG}/${_SCRIPT}.done"
_PATH_SSH_KEEP="/home/shared/keep/.ssh"
_PATH_SOFT=/ext/shared/Soft/multi
#echo -e "\$0=$0\nBASH_SOURCE=$BASH_SOURCE\n_SCRIPT=$_SCRIPT\n_PATH_BASE=${_PATH_BASE}\n_PATH_BASE_SUB=${_PATH_BASE_SUB}"
#echo -e "S_RELEASE_NAME=$S_RELEASE_NAME\n_PATH_LOG=${_PATH_LOG}"
#echo -e "S_FILE_INSTALL_CONF=${S_FILE_INSTALL_CONF}\nS_FILE_INSTALL_DONE=${S_FILE_INSTALL_DONE}\n_PATH_SSH_KEEP=${_PATH_SSH_KEEP}\n_PATH_SOFT=${_PATH_SOFT}\n"

# dir
! [ -d ${_PATH_LOG} ] && mkdir -p ${_PATH_LOG}
[ "$(stat -c %u ${_PATH_LOG})" == 0 ] && sudo chown -R 1000:1000 ${_PATH_LOG} && sudo chmod -R g+rw ${_PATH_LOG}
[ -d "${_PATH_SOFT}" ] && [ "$(stat -c %g ${_PATH_SOFT})" == 0 ] && sudo chown -R :1000 ${_PATH_SOFT} && sudo chmod -R g+rw ${_PATH_SOFT}

# btrfs1
if [ -f "${_PATH_LOG}/btrfs1.log" ]; then
	FILECONF_BTRFS1="${_PATH_LOG}/conf"
	FILEDONE_BTRFS1="${_PATH_LOG}/btrfs1.log"

	# require
	FILE="$FILECONF_BTRFS1"
	if [ -f "$FILE" ]; then . "$FILE"; else echo -e "\e[0;31mUnable to load file: ${FILE}\e[0;0m"; exit 1; fi

	mv "$FILECONF_BTRFS1" "${S_FILE_INSTALL_CONF}"
	mv "$FILEDONE_BTRFS1" "${S_FILE_INSTALL_DONE}"
else
	touch "${S_FILE_INSTALL_CONF}"
fi

# require
for FILE in "${_PATH_BASE}/../../inc-functions-lite" "${S_FILE_INSTALL_CONF}"; do
	[ ! -f "$FILE" ] && echo -e "\e[0;31mUnable to load file: ${FILE}\e[0;0m" && exit 1 || . "$FILE"
done

# ssh
! [ -d ${_PATH_SSH_KEEP} ] && echo -e "\e[0;31mUnable to find dir : ${_PATH_SSH_KEEP}\e[0;0m" && exit 1


########################################  MAIN

[ -z ${_STEP+x} ] && anstmp=n && _askno "Do you want an installation with halts for each parts ($anstmp)" && _STEP=${_ANSWER:-$anstmp} && _STEP=${_STEP/n/} && _confset _STEP "$_STEP"


#################### btrfs2-

_PART=btrfs2
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi


####################  DATA
str="# install"; ! grep -q "^$str" "${S_FILE_INSTALL_CONF}" && echo -e "\n$str" >> "${S_FILE_INSTALL_CONF}"

#[ -z "${_release+x}" ] && anstmp="xenialg" && _askno "Give the name of release ($_ANSWER)"  && _release=${_ANSWER:-$anstmp} && _confset _release "$_release"
_confset _release "$S_RELEASE_NAME"

# if not btrfs
! [ "$_LXD" ] && _askyn "Do you want to configure computer for lxd ? " && _LXD=${_ANSWER/n/} && _confset _LXD "$_LXD"

[ -z ${_USERNAME+x} ] && _menu "Select a user name" xenial xenialg && _USERNAME=$_ANSWER && _confset _USERNAME "${_USERNAME}"

[ -z ${_SYSNAME+x} ] && anstmp=${_USERNAME} && _askno "Give the btrfs volume name for system device '$_DEVICE_SYS' for btrfs ($anstmp)" && _SYSNAME=${_ANSWER:-$anstmp} && _confset _SYSNAME "$_SYSNAME"


[ -z ${_LAPTOP+x} ] && anstmp=n && _askno "Do you want an installation for laptop ($anstmp)" && _LAPTOP=${_ANSWER:-$anstmp} && _LAPTOP=${_LAPTOP/n/} && _confset _LAPTOP "$_LAPTOP"

[ -z ${_DEV+x} ] && anstmp=y && _askno "Do you want install 'developping' softwares? ($anstmp)" && _DEV=${_ANSWER:-$anstmp} && _DEV=${_DEV/n/} && _confset _DEV "$_DEV"

[ -z ${_NETWORK+x} ] && anstmp=y && _askno "Do you want install 'network' softwares? ($anstmp)" && _NETWORK=${_ANSWER:-$anstmp} && _NETWORK=${_NETWORK/n/} && _confset _NETWORK "$_NETWORK"

_vmware=
! [ "$_LXD" ] && [ -z ${_vmware+x} ] && anstmp=y && _askno "Do you want install 'vmware' software? ($anstmp)" && _vmware=${_ANSWER:-$anstmp} && _vmware=${_vmware/n/}
_confset _vmware "$_vmware"

_VIRTUALBOX=
! [ "$_LXD" ] && ! [ "$_vmware" ] && [ -z ${_VIRTUALBOX+x} ] && anstmp=y && _askno "Do you want install 'virtualbox' software? ($anstmp)" && _VIRTUALBOX=${_ANSWER:-$anstmp} && _VIRTUALBOX=${_VIRTUALBOX/n/}
_confset _VIRTUALBOX "$_VIRTUALBOX"

[ -z ${_SSH_BACK+x} ] && _menu "Select an ssh identity for user ${_USERNAME}" $(ls -a1 -I. -I.. -I.ssh-all ${_PATH_SSH_KEEP}|xargs) && _SSH_BACK=$_ANSWER && _confset _SSH_BACK "$_SSH_BACK"

[ -z ${_SSH_BACK_ROOT+x} ] && _menu "Select an ssh identity for user root" $(ls -a1 -I. -I.. -I.ssh-all ${_PATH_SSH_KEEP}|xargs) && _SSH_BACK_ROOT=$_ANSWER && _confset _SSH_BACK_ROOT "$_SSH_BACK_ROOT"

[ -z ${_FREECAD+x} ] && anstmp=y && _askno "Do you want install 'freecad' software? ($anstmp)" && _FREECAD=${_ANSWER:-$anstmp} && _FREECAD=${_FREECAD/n/} && _confset _FREECAD "$_FREECAD"

[ -z ${_CINELERRA+x} ] && anstmp=n && _askno "Do you want install 'cinelerra' software? ($anstmp)" && _CINELERRA=${_ANSWER:-$anstmp} && _CINELERRA=${_CINELERRA/n/} && _confset _CINELERRA "$_CINELERRA"

[ -z ${_MACBUNTU+x} ] && anstmp=n && _askno "Do you want install 'macbuntu'? ($anstmp)" && _MACBUNTU=${_ANSWER:-$anstmp} && _MACBUNTU=${_MACBUNTU/n/} && _confset _MACBUNTU "$_MACBUNTU"

[ -z "${_redshift+x}" ] && anstmp=n && _askno "Do you want install 'redshift'? ($anstmp)" && _redshift=${_ANSWER:-$anstmp} && _redshift=${_redshift/n/} && _confset _redshift "$_redshift"

[ -z ${_MULTIBOOT+x} ] && anstmp="9.2.0" && _askno "Give the version of multiboot to install ($anstmp)" && _MULTIBOOT=${_ANSWER:-$anstmp} && _MULTIBOOT=${_MULTIBOOT/n/} && _confset _MULTIBOOT "$_MULTIBOOT"

[ -z ${_OWNCLOUD+x} ] && anstmp="n" && _askno "Do you want install 'owncloud' addons ? ($anstmp)" && _OWNCLOUD=${_ANSWER:-$anstmp} && _OWNCLOUD=${_OWNCLOUD/n/} && _confset _OWNCLOUD "$_OWNCLOUD"


####################  COMMON-

_PART=common
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  REPOSITORIES-

_PART=repositories
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  UPGRADE-

_PART=upgrade
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  INSTALL-

_PART=install
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then
	! . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install && echo "wrong '${_PART}'" && exit
	[ "$_STEP" ] && _askno "Valid to continue"
else
	_echoi "performed *** ${_PART}"
fi

####################  DEV-

_PART=dev
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then
	! . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install && echo "wrong '${_PART}'" && exit
	[ "$_STEP" ] && _askno "Valid to continue"
else
	_echoi "performed *** ${_PART}"
fi

####################  CONFIGURATION-

_PART=configuration
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  LAUNCHER-

_PART=launcher
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  AUTOSTART-

_PART=autostart
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

###################  SSH-

_PART=ssh
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  ROOT-

_PART=root
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

####################  END-

_PART=end
if ! _parthave ${_PART} ${S_FILE_INSTALL_DONE}; then . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}.install; [ "$_STEP" ] && _askno "Valid to continue"; else _echoi "performed *** ${_PART}"; fi

_echoT "####################  end  ####################"

_echoi "\n!!!!! This installation are complety DONE ;o) !!!!!"

<<keep
uefi=y
_USERNAME=xenialg
devicesys=/dev/sda2
_SYSNAME=xenialg
deviceext=
devicegrub=/dev/sda
_LXD=y
ssd=

#software
_DEV=y
_NETWORK=y
_FREECAD=y
_CINELERRA=n
_vmware=
_VIRTUALBOX=
_MACBUNTU=
_MULTIBOOT=9.1.0
keep


<<keep

######################################## m_audio_delta_66

# driver mudita24 replace Envy24
sudo apt install -y mudita24


########################################  FIREFOX

about:config
browser.search.openintab;true
browser.tabs.loadBookmarksInTabs;true
browser.tabs.insertRelatedAfterCurrent;true


########################################  FLASH

sudo apt install --reinstall flashplugin-installer ttf-mscorefonts-installer


########################################  SHUT_DOWN

#sudo systemctl disable NetworkManager-wait-online.service
#sudo systemctl disable plymouth-quit-wait.service


########################################  USB_SYSTEM

sudo cp -p /etc/fstab /etc/fstab.keep; echo "tmpfs   /tmp		tmpfs   defaults,noatime,mode=1777	0 0
tmpfs   /var/tmp	tmpfs   defaults,noatime,mode=1777	0 0
tmpfs   /var/lock	tmpfs   defaults,noatime,mode=1777	0 0
tmpfs   /var/log	tmpfs   defaults,noatime		0 0
tmpfs   /var/run	tmpfs   defaults,noatime,mode=0755	0 0
tmpfs   /var/cache/apt	tmpfs   defaults			0 0
#tmpfs   /var/cache	tmpfs   defaults,noatime,mode=0755	0 0" | sudo tee -a /etc/fstab


########################################  USB_LIVE

# update_kernel
sudo mv /usr/sbin/update-initramfs /usr/sbin/update-initramfs.keep; sudo ln -s /rofs/usr/sbin/update-initramfs /usr/sbin/update-initramfs; sudo dpkg --configure -a # copy initrd & vmlinuz to /casper

keep

<<global

sudo apt install -y fslint acpi gnupg2 dstat htop sysstat pv tree openssh-server sysinfo testdisk gparted kpartx meld synaptic openjdk-8-jre icedtea-8-plugin gdebi p7zip-rar p7zip-full rar unrar jq hfsprogs \
gir1.2-gtop-2.0 gir1.2-networkmanager-1.0 gir1.2-clutter-1.0 \
gnome-tweak-tool numlockx dconf-tools multisystem boot-repair gnome-activity-journal gnome-sushi gnome-system-tools font-manager y-ppa-manager redshift backintime-gnome \
nautilus-sendto easytag-nautilus nautilus-actions nautilus-admin nautilus-compare nautilus-columns nautilus-emblems nautilus-gtkhash nautilus-hide nautilus-ideviceinfo nautilus-image-manipulator nautilus-script-audio-convert nautilus-script-debug nautilus-scripts-manager nautilus-wipe seahorse-nautilus \
gedit-developer-plugins gedit-plugins gedit-source-code-browser-plugin \
owncloud-client owncloud-client-cmd csync-owncloud nautilus-owncloud \
language-pack-fr language-pack-fr-base language-pack-gnome-fr language-pack-gnome-fr-base hunspell-fr hunspell-fr-classical hyphen-fr mythes-fr firefox-locale-fr thunderbird-locale-fr libreoffice-help-fr libreoffice-l10n-fr tesseract-ocr-fra gimp-help-fr \
libreoffice libreoffice-avmedia-backend-gstreamer libreoffice-base libreoffice-base-drivers libreoffice-calc libreoffice-draw libreoffice-gnome libreoffice-gtk3 libreoffice-impress libreoffice-math libreoffice-mysql-connector libreoffice-ogltrans libreoffice-pdfimport libreoffice-report-builder libreoffice-sdbc-postgresql libreoffice-style-galaxy libreoffice-style-human libreoffice-style-oxygen libreoffice-style-tango libreoffice-templates libreoffice-voikko libreoffice-wiki-publisher libreoffice-writer libreoffice-writer2xhtml scribus scribus-template \
isomaster brasero qarte amule amule-gnome-support gnome-subtitles audacity mixxx tangerine tesseract-ocr-fra ubuntu-restricted-extras mozplugger easytag soundconverter sound-juicer vlc gnome-xcf-thumbnailer stopwatch lightzone darktable youtube-dl \
gmusicbrowser gmusicbrowser-art unity-scope-gmusicbrowser gpodder goobox gstreamer1.0-plugins-bad gstreamer1.0-plugins-bad-faad pulseaudio-equalizer ubuntu-restricted-extras cdrdao cue2toc bchunk ccd2iso mdf2iso nrg2iso \
gimp-data gimp-data-extras gimp-dds gimp-gap gimp-gmic gimp-gutenprint gimp-lensfun gimp-normalmap 'gimp-save-for-web' gimp-texturize gimp-ufraw gtkam-gimp pandora create-resources inkscape ijsgutenprint ink-generator sozi xsane \
totem totem-plugins totem-plugins-extra kdenlive kdenlive-data gnome-video-effects-extra mkvtoolnix-gui handbrake-gtk handbrake-cli libdvdread4 libdvdnav4 dpluzz libavcodec-extra libdvd-pkg gnome-do gnome-do-plugins \
pidgin pidgin-awayonlock pidgin-bot-sentry pidgin-encryption pidgin-gnome-keyring pidgin-hotkeys pidgin-libnotify pidgin-microblog pidgin-openpgp pidgin-plugin-pack pidgin-skype pidgin-themes \
freecad freecad-extras-drawing-dimensioning freecad-extras-lattice2 freecad-extras-eaglepcb2freecad freecad-extras-macroparttovrml freecad-doc freecad-extras-fasteners freecad-extras-sheetmetal freecad-extras-animation freecad-extras-idfimporter freecad-extras-timber freecad-extras-assembly2 freecad-extras-kicadstepuptools freecad-extras-workfeature freecad-extras-bolts freecad-extras-kicadstepuptools-wb freecad-extras-cadquery freecad-extras-lattice \
chromium-browser \
ghex mariadb-client postgresql-client git \
pgadmin4 mytop dia-gnome dia2code dia-shapes postgresql-autodoc umbrello kcachegrind graphviz xdot gitk gitg wireshark zenmap

# skype
https://www.skype.com/fr/get-skype/

global
