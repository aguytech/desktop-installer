#!/bin/bash
#
# write by Aguy


# name
lxc list --format=json | jq '.[] .name'
# ip
lxc list $ct --format=json | jq '.[] .state .network .eth0 .addresses[0] .address'
# running
lxc list --format=json | jq -r '.[] | select(.status == "Running") .name'
# stopped
lxc list --format=json | jq -r '.[] | select(.status == "Stopped") .name'
# profile contains $profile
profile=share; lxc list --format=json | jq '.[] | select(.profiles | any(contains("'$profile'"))) .name'

# pretty json
lxc list --format=json debian8 | python -m json.tool
lxc list --format=json debian8 | jq '.[]'

# sync /usr/local/bs
for ct in $(lxclr); do echo "************* $ct"; rsync -av --delete /usr/local/bs/ root@$ct:/usr/local/bs/; done


########################################  ROOT

su -


########################################  INSTALL

# lvm
# apt install thin-provisioning-tools

# lxd
#apt install -y lxd lxd-tools jq criu
apt install -t xenial-backports lxd lxd-client

cd /
ln -sv /var/lib/lxd lxd

# lxc
apt install lxc


# zfs
#apt-add-repository -y ppa:zfs-native/stable
#apt update
#apt install -y ubuntu-zfs zfs-auto-snapshot


########################################  CONF

# bash completion
cp -a usr/share/bash-completion/completions/lxc /etc/bash_completion.d/

# LXD networking
# dpkg-reconfigure -p medium lxd
# lxc profile edit default
file=/etc/default/lxd-bridge
cp -a $file $file.keep$(date +%s)
sch='USE_LXD_BRIDGE'; str='"true"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV4_ADDR'; str='"10.0.0.1"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV4_NETMASK'; str='"255.255.255.0"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV4_NETWORK'; str='"10.0.0.1/24"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV4_DHCP_RANGE'; str='"10.0.0.2,10.0.0.254"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV4_DHCP_MAX'; str='"253"'; sed -i "s|^\($sch\).*$|\1=$str|" $file
sch='LXD_IPV6_PROXY'; str='"false"'; sed -i "s|^\($sch\).*$|\1=$str|" $file

lxd init

lxc info
lxc config show

# images
lxc config set images.remote_cache_expiry 10
lxc config set images.auto_update_interval 24
lxc config set images.auto_update_cached true

# lvm
#lxc config set storage.lvm_vg_name ssd
#lxc config set storage.lvm_volume_size 2G

# zfs
#lxc config set storage.zfs_pool_name 'nameofzpool'

# LXC networking
#file=/etc/default/lxc-net
#cp -a $file $file.keep$(date +%s)
#sch='USE_LXC_BRIDGE'; str='"false"'; sed -i "s|^\($sch\).*$|\1=$str|" $file

lxc config show

lxc profile list
lxc profile show default

<<keep
sed -i "s|^.*\(LXC_DHCP_CONFILE.*\)$|\1|" $file

file=/etc/lxc/dnsmasq.conf
! [ -f $file ] || ! grep -q dnsmasq-hosts "$file" && echo -e "# file to manage ip reservation\ndhcp-hostsfile=/etc/lxc/dnsmasq-hosts.conf" >> $file
file=/etc/lxc/dnsmasq-hosts.conf
! [ -f $file ] || ! grep 't1,' $file && echo -e "# reservation ip for containers\n# <container's name>,<IP>\nt1,10.0.3.202" >> $file

service lxc-net restart

# after changes just call this line
killall -s SIGHUP dnsmasq
keep


########################################  REMOTE

lxc config set core.https_address $(ifconfig eth0 | awk '/inet addr/{print substr($2,6)}'):8443
pwd=''
lxc config set core.trust_password "$pwd"

lxc remote add fx8320e 192.168.1.200


########################################  DIR

# export
dir=/var/lib/lxd/export; ! [ -d $dir ] && mkdir $dir


########################################  PROFILES

####################  DEFAULT
# share
dir=/var/lib/lxd/share; ! [ -d $dir ] && mkdir $dir
lxc profile device add default share disk dir=${S_VM_PATH_SHARE} source=/var/lib/lxd/share

chgrp -R 1000 $dir
chmod -R 2775 $dir
setfacl -Rm g:165536:rwx,d:g:165536:rwx $dir
getfacl $dir

#####################  PHP
profile=php
lxc profile create $profile
lxc profile show $profile |sed 's|^description.*|description: add configuration and devices for php web server|' |lxc profile edit $profile -
lxc profile device add $profile www disk dir=/var/www source=/home/shared/www
lxc profile show $profile

# @host
dir=/home/shared/www
#chown $((165536 + 33)).$((165536 + 33)) -R $dir
chgrp -R 33 $dir
chmod -R 2775 $dir
setfacl -Rm g:165536:rwx,d:g:165536:rwx $dir
getfacl $dir
adduser xenial www-data
# @container
adduser "$USER" www-data


# append profile to containers
for ct in $(lxc list --format=json | jq -r '.[] | select(.name | contains("php")) .name'); do
	profiles=$(lxc list --format=json | jq -r '.[] | select(.name == "debian8") | .profiles [] + ","')
        lxc profile apply "$ct" "${profiles}${profile}"
done


########################################  HOSTS

file=/etc/hosts
! grep -q "# lxd" "$file" && echo -e "\n# lxd" >> $file


########################################  IMAGE_GET

lxc image copy images:debian/jessie/amd64 local: --alias debian7-init --auto-update --public && \
lxc image copy images:debian/wheezy/amd64 local: --alias debian8-init --auto-update --public && \
lxc image copy images:debian/stretch/amd64 local: --alias debian9-init --auto-update --public && \
lxc image copy ubuntu:16.04/amd64 local: --alias ubuntu1604-init --auto-update --public && \
lxc image copy images:centos/6/amd64 local: --alias centos6-init --auto-update --public && \
lxc image copy images:centos/7/amd64 local: --alias centos7-init --auto-update --public




########################################  INFO

#zpool list
#zpool status
#lxc config get storage.zfs_pool_name

lxc config show

# files for default uid & gid
cat /etc/subuid /etc/subgid
# proc services
ll /var/lib/lxcfs/proc/




# ll /var/lib/lxc/*/config


# check config from host
lxc-checkconfig

# check config before booting a new kernel
CONFIG=/var/lib/lxc/w1/config /usr/bin/lxc-checkconfig

# list available distro
ls /usr/share/lxc/templates/

# create container
lxc-create -t download -n u1 # give a list & prompt
lxc-create -t download -n u1 -- -d debian -r jessie -a amd64
lxc-create -n u1 -t debian
lxc-create -n debian8 -- -t debian -r wheezy

# start container with daemon
lxc-start -n u1 -d
lxc-start -n u1 -d -l debug -o /tmp/debug.out

# enter in container with login
lxc-console -n u1
	# exit user
	exit
	# exit console
	'ctrl+a' & 'q'
	sudo poweroff

# enter in container without login
lxc-attach -n u1
	# exit
	exit

# stop container
lxc-stop -n u1
# kill container
lxc-stop -n u1 -k

# clone container
lxc-clone u1 ubuntu02


########################################  CONF

echo "  #+ allowing bind mount inside lxc container
  mount options=(rw, bind),
  mount options=(rw, nosuid, nodev, noexec, remount, relatime),
  mount options=(rw, nosuid, noexec, remount, relatime),
  mount options=(rw, nosuid, nodev, noexec)," >> /etc/apparmor.d/lxc/lxc-default

