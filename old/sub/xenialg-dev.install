#!/bin/bash
#
# write by Aguy


_echoT "#################### START ${_PART}"

_FILE_DEV_DONE=${_PATH_LOG}/dev.done
_RELEASE_NAME_DEV=inc_${S_RELEASE_NAME}

str="# dev"; ! grep -q "^$str" "${S_FILE_INSTALL_CONF}" ] && echo -e "\n$str" >> "${S_FILE_INSTALL_CONF}"


########################################  MAIN

_echoT "------------------ data"

_confset _connectors y

# sublimetext
[ -z ${_SUBLIMETEXT+x} ] && anstmp=repos && _askno "Do you want install 'sublime-text' sofware? ($anstmp)" && _SUBLIMETEXT=${_ANSWER:-$anstmp} && _SUBLIMETEXT=${_SUBLIMETEXT/n/} && _confset _SUBLIMETEXT "$_SUBLIMETEXT"

if [ "$_SUBLIMETEXT" ]; then
	[ -z ${_SUBLIMETEXT_VER+x} ] && anstmp="3176" && _askno "Please give 'sublime-text' build version to install or repos ? ($anstmp)" && _SUBLIMETEXT_VER=${_ANSWER:-$anstmp} && _confset _SUBLIMETEXT_VER "$_SUBLIMETEXT_VER"
fi

# smartgit
[ -z ${_SMARTGIT+x} ] && anstmp=y && _askno "Do you want install 'Smartgit' sofware? ($anstmp)" && _SMARTGIT=${_ANSWER:-$anstmp} && _SMARTGIT=${_SMARTGIT/n/} && _confset _SMARTGIT "$_SMARTGIT"

if [ "$_SMARTGIT" ]; then
	[ -z ${_SMARTGIT_VER+x} ] && anstmp="18_1_4" && _askno "Please give 'Smartgit' version to install ? ($anstmp)" && _SMARTGIT_VER=${_ANSWER:-$anstmp} && _confset _SMARTGIT_VER "$_SMARTGIT_VER"
fi

# gitkraken
[ -z ${_GITKRAKEN+x} ] && anstmp=y && _askno "Do you want install 'GitKraken' sofware? ($anstmp)" && _GITKRAKEN=${_ANSWER:-$anstmp} && _GITKRAKEN=${_GITKRAKEN/n/} && _confset _GITKRAKEN "$_GITKRAKEN"

# firefoxdev
[ -z ${_FIREFOX_DEV+x} ] && anstmp=y && _askno "Do you want install 'Firefox Developper' sofware? ($anstmp)" && _FIREFOX_DEV=${_ANSWER:-$anstmp} && _FIREFOX_DEV=${_FIREFOX_DEV/n/} && _confset _FIREFOX_DEV "$_FIREFOX_DEV"

if [ "$_FIREFOX_DEV" ]; then
	[ -z ${_FIREFOX_DEV_VER+x} ] && anstmp="62.0b16" && _askno "Please give 'Firefox Developper' version to install ? ($anstmp)" && _FIREFOX_DEV_VER=${_ANSWER:-$anstmp} && _confset _FIREFOX_DEV_VER "$_FIREFOX_DEV_VER"
fi

# eclipse
[ -z ${_ECLIPSE+x} ] && anstmp=y && _askno "Do you want install 'Eclipse' sofware? ($anstmp)" && _ECLIPSE=${_ANSWER:-$anstmp} && _ECLIPSE=${_ECLIPSE/n/} && _confset _ECLIPSE "$_ECLIPSE"

if [ "$_ECLIPSE" ]; then
	[ -z ${_ECLIPSE_VER+x} ] && anstmp="photon-R" && _askno "Please give firefox version to install ? ($anstmp)" && _ECLIPSE_VER=${_ANSWER:-$anstmp} && _confset _ECLIPSE_VER "$_ECLIPSE_VER"
fi

# squirrel
[ -z ${_SQUIRREL+x} ] && anstmp=y && _askno "Do you want install 'SquirrelSQL' sofware? ($anstmp)" && _SQUIRREL=${_ANSWER:-$anstmp} && _SQUIRREL=${_SQUIRREL/n/} && _confset _SQUIRREL "$_SQUIRREL"

if [ "$_SQUIRREL" ]; then
	[ -z ${_SQUIRREL_VER+x} ] && anstmp="3.8.1" && _askno "Please give 'SquirrelSQL' version to install ? ($anstmp)" && _SQUIRREL_VER=${_ANSWER:-$anstmp} && _confset _SQUIRREL_VER "$_SQUIRREL_VER"
fi

# architect
[ -z ${_ARCHITECT+x} ] && anstmp=n && _askno "Do you want install 'Architect' sofware? ($anstmp)" && _ARCHITECT=${_ANSWER:-$anstmp} && _ARCHITECT=${_ARCHITECT/n/} && _confset _ARCHITECT "$_ARCHITECT"

if [ "$_ARCHITECT" ]; then
	[ -z ${_ARCHITECT_VER+x} ] && anstmp="1.0.8" && _askno "Please give 'Architect' version to install ? ($anstmp)" && _ARCHITECT_VER=${_ANSWER:-$anstmp} && _confset _ARCHITECT_VER "$_ARCHITECT_VER"
fi


####################  CONNECTORS

_PARTDEV=connectors
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave ${_PARTDEV} $_FILE_DEV_DONE; then
	[ "$_STEP" ] && _askno "Valid to continue"
	FILE=/home/shared/keep/.connectors.tar.gz
	! [ -f "$FILE" ] && _exite "Unable to find file: $FILE"
	tar xzf "$FILE" -C /opt
	_partadd ${_PARTDEV} $_FILE_DEV_DONE
else
	_echoi "performed **** ${_PARTDEV}"
fi

####################  SUBLIMETEXT-

_PARTDEV=sublimetext
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  SMARTGIT-

_PARTDEV=smartgit
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  GITKRAKEN-

_PARTDEV=gitkraken
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  FIREFOXDEV-

_PARTDEV=firefoxdev
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  ECLIPSE-

_PARTDEV=eclipse
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  SQUIRREL-

_PARTDEV=squirrel
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

####################  ARCHITECT-

_PARTDEV=architect
_PARTTEST="_${_PARTDEV}"
if [ "${!_PARTTEST}" ] && ! _parthave "${_PARTDEV}" "$_FILE_DEV_DONE"; then
	. "${_PATH_BASE_SUB}/${_RELEASE_NAME_DEV}-${_PARTDEV}.install" && [ "$_STEP" ] && _askno "Valid to continue"
else _echoi "performed **** ${_PARTDEV}"; fi

########################################  END

_echoT "------------------ write ${_PART}"
_partadd "${_PART}" "${S_FILE_INSTALL_DONE}"

_echoT "#################### END ${_PART}"


