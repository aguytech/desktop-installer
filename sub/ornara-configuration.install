#!/bin/bash
#
# write by Aguy


_echoT "#################### START ${_PART}"

########################################  MAIN

_echoT "================== ${_PART} / global configuration"

_echoT "------------------ reduce swapiness"
echo "vm.swappiness=10" |sudo tee -a /etc/sysctl.d/99-swappiness.conf


_echoT "------------------ grub"
file=/etc/default/grub
sudo sed -i "/^GRUB_DEFAULT=/ s|=.*|=0|" "$file"
sudo sed -i "/^GRUB_TIMEOUT=/ s|=.*|=2|" "$file"
#sudo sed -i "/^GRUB_TIMEOUT_STYLE=/ s|=hidden|menu|" "$file"
sudo sed -i "/^GRUB_SAVEDEFAULT=/ s|=.*|=false|" "$file"

# add identifier to menuentry
file="/etc/grub.d/30_os-prober"
file_keep="$file.keep$(date +%s)"
if ! grep -q 'LONGNAME="${LONGNAME} ${BTRFSsubvol/#subvol=/}"' "$file"; then
    sudo cp -a "$file" "$file_keep" && sudo chmod -x "$file_keep"
    sudo sed -i "/LONGNAME=\"\${LABEL}\"/ a\  else\n    LONGNAME=\"\${LONGNAME} \${BTRFSsubvol/#subvol=/}\"" "$file"
fi

sudo update-grub


_echoT "------------------ numlock tty service"

file_exec="/usr/local/bin/numlock"
echo '#!/bin/bash
for tty in /dev/tty{1..6}
do
    /usr/bin/setleds -D +num < "$tty";
done' | sudo tee "$file_exec"
sudo chmod +x "$file_exec"

file_service="/etc/systemd/system/numlock.service"
echo "[Unit]
Description=numlock

[Service]
ExecStart=$file_exec
StandardInput=tty
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target" | sudo tee "$file_service"

sudo systemctl enable numlock.service


if type vim 2>/dev/null 1>&2 ; then

    _echoT "------------------  /usr/bin/edit links"

    files="/usr/bin/edit /usr/bin/editor"
    for file in $files; do
        [ -e ${file} ] && sudo rm ${file}
        sudo ln -sv /usr/bin/vim ${file}
    done
fi


_echoT "------------------  /usr/local/bs/conf links"

for file in .nanorc .tmux.conf .vimrc; do
    path_from="${S_PATH_SCRIPT_CONF}/${file}"
    path=~/"$file"
    [ -e "$path" ] && sudo rm -fR "$path"
    ln -s "${path_from}" "${path}"
done

_echoT "------------------ gstreamer preset"
path=~/.local/share/gstreamer-1.0/presets
! [ -d $path ] && mkdir -p "$path"

file="$path/GstVorbisEnc.prs"
_keepmvts "$file"
echo "[_presets_]
element-name=GstVorbisEnc
version=0.10

[ogg_high]
name=vorbisenc
perfect-timestamp=true
hard-resync=false
tolerance=40000000
quality=0.8
managed=false

[ogg_very_high]
name=vorbisenc
perfect-timestamp=true
hard-resync=false
tolerance=40000000
quality=0.9
managed=false" > "$file"


_echoT "------------------ git config"

git config --global user.name "aguy tech"
git config --global user.email aguytech@free.fr
git config --global core.editor nano
git config --global merge.tool meld

echo -e "[alias]
\tci = commit
\tco = checkout
\tst = status
\tbr = branch
" >> ~/.gitconfig


_echoT "------------------ nano"

for str in conf install; do
    sudo cp -a /usr/share/nano/sh.nanorc /usr/share/nano/$str.nanorc
    sudo sed -i 's|^\(syntax \).*|\1"'$str'" "\.'$str'$"|' /usr/share/nano/$str.nanorc
done

file=/etc/nanorc
sudo cp -a $file $file.keep$(date +%s)
sudo sed -i 's|^.*\(set tabsize\).*|\1 4|' "$file"
sudo sed -i 's|^\(set cut.*\)$|# \1|' "$file"
sudo sed -i 's|^\(set linenumbers.*\)$|# \1|' "$file"
sudo sed -i '/^# *include/ s/^# //' "$file"

# various
opts="constantshow historylog matchbrackets multibuffer nohelp softwrap "
# color
opts+="errorcolor functioncolor keycolor numbercolor selectedcolor statuscolor stripecolor titlecolor"
# uncomment
for opt in $opts; do
    sudo sed -i "s|^.*\(set $opt .*\)$|\1|"  $file
done


if [ "$_DEV" ]; then
    _echoT "----------  conf vim"

    file="/etc/vimrc"
    sudo sed -i "s|^\"\(syntax\).*|\1 on|" "$file"

    sudo cp "${S_PATH_INSTALL_CONF}/vim/"* /usr/share/vim/vim*/colors/

    opts="background=dark showmatch"
    # uncomment
    for opt in $opts; do
        sudo sed -i "s|^\"\(set $opt.*\)$|\1|" "$file"
    done
fi

_echoT "------------------ language-specs conf"

sudo cp -a ${S_PATH_INSTALL_CONF}/gtk/conf.lang /usr/share/gtksourceview-3.0/language-specs/
sudo cp -a ${S_PATH_INSTALL_CONF}/gtk/install.lang /usr/share/gtksourceview-3.0/language-specs/


_echoT "------------------ firefox tweaks"

path=~/.mozilla/firefox/$USER
if [ -d "$path" ]; then
	ln -sv "${S_PATH_SCRIPT_CONF}/user.js" "$path"
	chown 1000:1000 "$path"
else
	_echoI "copy file '${S_PATH_INSTALL_CONF}/firefox/user.js'\nto your firefox path of profile"
	_askno "Confirm"
fi


_echoT "------------------ tmux"

file=~/.tmux.conf

# plugins
path=".tmux/plugins/resurect"
! [ -d ~/"$path" ] && mkdir -p ~/"$path"
git clone https://github.com/tmux-plugins/tmux-resurrect ~/"$path"
! grep -q resurrect.tmux "$file" && echo -e "# resurect plugin\nrun-shell ~/$path/resurrect.tmux" >> "$file"

# set conf file
tmux source-file "$file"

# bash completion
sudo cp "${S_PATH_INSTALL_CONF}/bash_completion/tmux" /usr/share/bash-completion/completions/


_echoT "------------------  logrotate server"

# logrotate
echo "# Logrotate file for server functions logs
#$S_PATH_LOG_INSTALL/*.log
$S_PATH_LOG_SERVER/*.log
$S_PATH_LOG_SERVER/*.err
$S_PATH_LOG_SERVER/*.debug
{
    missingok
    compress
    delaycompress
    notifempty
    weekly
    rotate 8
}" | sudo tee /etc/logrotate.d/server


_echoT "------------------ launcher clean"

sudo sed -i 's|;;|;|' /usr/share/applications/*.desktop


######################################## required ${S_RELEASE_DESKTOP}

file="${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}-${S_RELEASE_DESKTOP}.install"
if [ -f "$file" ]; then
	_echoT "------------------ ${S_RELEASE_DESKTOP} required"

	! . ${_PATH_BASE_SUB}/${S_RELEASE_NAME}-${_PART}-${S_RELEASE_DESKTOP}.install && echo "wrong '${_PART}'" && exit
fi

########################################  END

_echoT "------------------ write ${_PART}"
_partadd "${_PART}" "${S_FILE_INSTALL_DONE}"

_echoT "#################### END ${_PART}"


