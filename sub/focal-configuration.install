#!/bin/bash
#
# write by Aguy


_echoT "#################### START ${_PART}"

########################################  MAIN

_echoT "================== ${_PART} / global configuration"

_echoT "------------------ grub"

file=/etc/default/grub
_keepcpts_rt "$file"
sudo sed -i "/^GRUB_TIMEOUT=/ s|=.*|=2|" "$file"
sudo sed -i "/^GRUB_HIDDEN_TIMEOUT_QUIET=/ s|=.*|=false|" "$file"
sudo sed -i "/^GRUB_HIDDEN_TIMEOUT_QUIET=/ s/^/#/" "$file"

file=/etc/grub.d/00_header
sudo sed -i "s|30|2|g" "$file"

sudo update-grub

<<KEEP
_echoT "------------------ numlock-state conf"

sudo gsettings set org.gnome.desktop.peripherals.keyboard numlock-state true


sudo gsettings set org.gnome.settings-daemon.peripherals.keyboard numlock-state on

_echoi "sudo -i
su gdm -s /bin/bash
gsettings set org.gnome.settings-daemon.peripherals.keyboard numlock-state on
exit
exit
"
_askno "Please write this lines in an another terminal & valid to continue"

_echoT "------------------ rsyslog conf"

sudo sed -i 's|^\(\$KLogPermitNonKernelFacility.*\)|#\1|' /etc/rsyslog.conf

sudo systemctl restart rsyslog.service

_echoT "------------------ tracker autostart disable"
grep -lr 'X-GNOME-Autostart-enabled=true' /etc/xdg/autostart/tracker-*|xargs sudo sed -i 's|^\(X-GNOME-Autostart-enabled=\).*|\1false|'

_echoT "------------------ pulseaudio"
file=/etc/pulse/default.pa
sudo sed -i 's|\(load-module module-switch-on-port-available\)|#\1|' $file

_echoT "------------------ tap-to-click"
gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true

_echoT "------------------ gstreamer1.0-vaapi remove"
sudo apt-get remove -y gstreamer1.0-vaapi

_echoT "------------------ gnome-shell-extension-ubuntu-dock remove"
sudo apt-get remove -y gnome-shell-extension-ubuntu-dock

_echoT "------------------ numlock tty service"

file_exec="/usr/local/bin/numlock"
echo '#!/bin/bash
for tty in /dev/tty{1..6}
do
    /usr/bin/setleds -D +num < "$tty";
done' | sudo tee "$file_exec"
sudo chmod +x "$file_exec"

file_service="/etc/systemd/system/numlock.service"
echo "[Unit]
Description=numlock

[Service]
ExecStart=$file_exec
StandardInput=tty
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target" | sudo tee "$file_service"

sudo systemctl enable numlock.service
KEEP

_echoT "------------------  /usr/local/bs/conf links"

for file in .nanorc .tmux.conf .vimrc; do
    path_from="${S_PATH_SCRIPT_CONF}/${file}"
    path=~/"$file"
    [ -e "$path" ] && sudo rm -fR "$path"
    ln -s "${path_from}" "${path}"
done

_echoT "------------------ gstreamer preset"
path=~/.local/share/gstreamer-1.0/presets
! [ -d $path ] && mkdir -p "$path"

file="$path/GstVorbisEnc.prs"
_keepmvts "$file"
echo "[_presets_]
element-name=GstVorbisEnc
version=0.10

[ogg_high]
name=vorbisenc
perfect-timestamp=true
hard-resync=false
tolerance=40000000
quality=0.8
managed=false

[ogg_very_high]
name=vorbisenc
perfect-timestamp=true
hard-resync=false
tolerance=40000000
quality=0.9
managed=false" > "$file"

file="/usr/share/sound-juicer/rhythmbox.gep"
_keepmvts_rt "$file"
sch="\[streamprofile-oggvorbis-1\]"
str="preset = ogg_very_high"
sudo sed -i "/$sch/ a $sch" "$file"

sch="\[profile-oggopus\]"
str="[profile-oggvorbis2]\nname = oggvorbis2\ndescription = Ogg Vorbis High\nformat = application/ogg\ntype = container\n\n[streamprofile-oggvorbis-12]\nparent = oggvorbis2\ntype = audio\npreset = ogg_high\nformat = audio/x-vorbis\npresence = 1\n\n[profile-oggvorbis3]\nname = oggvorbis3\ndescription = Ogg Vorbis Very High\nformat = application/ogg\ntype = container\n\n[streamprofile-oggvorbis-13]\nparent = oggvorbis3\ntype = audio\npreset = ogg_very_high\nformat = audio/x-vorbis\npresence = 1\n"
sudo sed -i "/$sch/ i $str" "$file"

_echoT "------------------ dvd"
sudo dpkg-reconfigure libdvd-pkg

_echoT "------------------ git config"

git config --global user.name "aguy tech"
git config --global user.email aguytech@free.fr
git config --global core.editor nano
git config --global merge.tool meld

echo -e "[alias]
\tci = commit
\tco = checkout
\tst = status
\tbr = branch
" >> ~/.gitconfig

<<KEEP
_echoT "------------------ gnome-xcf-thumbnailer"
! [ -d /usr/share/thumbnailers ] && sudo mkdir -p /usr/share/thumbnailers
! [ -e /usr/share/thumbnailers/gnome-xcf.thumbnailer ] && echo -e "[Thumbnailer Entry]\nTryExec=gnome-xcf-thumbnailer\nExec=gnome-xcf-thumbnailer %i %o\nMimeType=image/x-xcf;image/x-compressed-xcf;" | sudo tee /usr/share/thumbnailers/gnome-xcf.thumbnailer
nautilus -q
[ -d ~/.thumbnails/fail ] && rm -r ~/.thumbnails/fail
[ -d ~/.cache/thumbnails/fail ] && rm -r ~/.cache/thumbnails/fail
KEEP

_echoT "------------------ gedit settings"
#dconf write /org/nemo/extensions/nemo-terminal/default-visible false
#gsettings set org.gnome.gedit.preferences.ui max-recents 30
gsettings set org.gnome.gedit.preferences.ui side-panel-visible true
gsettings set org.gnome.gedit.preferences.editor display-line-numbers true
gsettings set org.gnome.gedit.preferences.editor tabs-size 4

dconf write /org/gnome/gedit/plugins/sourcecodebrowser/show-line-numbers true
dconf write /org/gnome/gedit/plugins/filebrowser/enable-remote true

# plugins
path_plug=~/.local/share/gedit/plugins
! [ -d $path_plug ] && mkdir -p $path_plug

_echoT "------------------ gedit / restore-tabs"
path=restore-tabs
cd $path_plug
_keepmvts "$path"
curl -o master.zip https://codeload.github.com/raelgc/gedit-restore-tabs/zip/master
unzip master.zip
rm master.zip
mv gedit-restore-tabs-master $path
rm $path/.gitignore
sudo cp $path/org.gnome.gedit.plugins.restoretabs.gschema.xml /usr/share/glib-2.0/schemas/
sudo glib-compile-schemas /usr/share/glib-2.0/schemas/

_echoT "------------------ gedit / duplicate-line"
path=duplicate-line
cd $path_plug
_keepmvts "$path"
curl -o master.zip https://codeload.github.com/hardpixel/gedit-duplicate-line/zip/master
unzip master.zip
rm master.zip
mv gedit-duplicate-line-master $path
sed -i 's|^\(\s*modifiers = event.state.*\)|#\1|' $path/duplicate_line.py
sed -i 's|^\(\s*\)\(if modifiers ==.*\)|#\1\2\n\1if event.state \& Gdk.ModifierType.CONTROL_MASK and event.state \& Gdk.ModifierType.SHIFT_MASK:|' $path/duplicate_line.py
#if event.state & Gdk.ModifierType.CONTROL_MASK and event.state & Gdk.ModifierType.SHIFT_MASK:

_echoT "------------------ gedit / gedit-markdown"
path=markdown_preview
cd $path_plug
_keepmvts "$path"
curl -o master.zip https://codeload.github.com/maoschanz/gedit-plugin-markdown_preview/zip/master
unzip master.zip
rm master.zip
mv gedit-plugin-markdown_preview-master $path

_echoT "------------------ nano"

for str in conf install; do
    sudo cp -a /usr/share/nano/sh.nanorc /usr/share/nano/$str.nanorc
    sudo sed -i 's|^\(syntax \).*|\1"'$str'" "\.'$str'$"|' /usr/share/nano/$str.nanorc
done

file=/etc/nanorc
sudo cp -a $file $file.keep$(date +%s)
sudo sed -i 's|^.*\(set tabsize\).*|\1 4|' "$file"
sudo sed -i 's|^\(set cut.*\)$|# \1|' "$file"
sudo sed -i 's|^\(set linenumbers.*\)$|# \1|' "$file"
sudo sed -i '/^# *include/ s/^# //' "$file"

# various
opts="constantshow historylog matchbrackets multibuffer nohelp softwrap "
# color
opts+=" errorcolor functioncolor keycolor numbercolor selectedcolor statuscolor stripecolor titlecolor"
# uncomment
for opt in $opts; do
    sudo sed -i "s|^.*\(set $opt .*\)$|\1|"  $file
done


if [ "$_DEV" ]; then
    _echoT "----------  conf vim"

    file="/etc/vim/vimrc"
    sudo sed -i "s|^\"\(syntax\).*|\1 on|" "$file"

    opts="background=dark showmatch"
    # uncomment
    for opt in $opts; do
        sudo sed -i "s|^\"\(set $opt.*\)$|\1|" "$file"
    done
fi

_echoT "------------------ language-specs conf"

sudo cp -a ${S_PATH_INSTALL_CONF}/gtk/conf.lang /usr/share/gtksourceview-3.0/language-specs/
sudo cp -a ${S_PATH_INSTALL_CONF}/gtk/install.lang /usr/share/gtksourceview-3.0/language-specs/


_echoT "------------------ gtk styles"

file="$HOME/.local/share/gtksourceview-4"
! [ -e "$file" ] && ln -sv /home/shared/.local/share/gtksourceview-3.0 "$file"

_echoT "------------------ _LAPTOP"
[ "$_LAPTOP" ] && sudo systemctl enable tlp


if [ -n "${_VIRTUALBOX}" ]; then
    _echoT "------------------ virtualbox"
    [ "$_VIRTUALBOX" ] && sudo adduser $USER vboxusers
fi

_echoT "------------------ firefox tweaks"

path=~/.mozilla/firefox/$USER
if [ -d "$path" ]; then
	ln -sv "${S_PATH_SCRIPT_CONF}/user.js" "$path"
	chown 1000:1000 "$path"
else
	_echoi "copy file '${S_PATH_INSTALL_CONF}/firefox/user.js'\nto your firefox path of profile"
	_askno "Confirm"
fi


_echoT "------------------ tmux"

file=~/.tmux.conf

# plugins
path=".tmux/plugins/resurect"
! [ -d ~/"$path" ] && mkdir -p ~/"$path"
git clone https://github.com/tmux-plugins/tmux-resurrect ~/"$path"
rm -fR ~/"$path/.git"
! grep -q resurrect.tmux "$file" && echo -e "# resurect plugin\nrun-shell ~/$path/resurrect.tmux" >> "$file"

# set conf file
tmux source-file "$file" 2>/dev/null

# bash completion
sudo cp "${S_PATH_INSTALL_CONF}/bash_completion/tmux" /usr/share/bash-completion/completions/


_echoT "------------------  logrotate server"

# logrotate
echo "# Logrotate file for server functions logs
#$S_PATH_LOG_INSTALL/*.log
$S_PATH_LOG_SERVER/*.log
$S_PATH_LOG_SERVER/*.err
$S_PATH_LOG_SERVER/*.debug
{
    missingok
    compress
    delaycompress
    notifempty
    weekly
    rotate 8
}
" | sudo tee /etc/logrotate.d/server


_echoT "------------------ launcher clean"

sudo sed -i 's|;;|;|' /usr/share/applications/*.desktop


if [ "$_DEV" ]; then
	_echoT "------------------ dev vim"

	sudo cp "${S_PATH_INSTALL_CONF}"/vim/* /usr/share/vim/vim*/colors/
fi

########################################  END

_echoT "------------------ write ${_PART}"
_partadd "${_PART}" "${S_FILE_INSTALL_DONE}"

_echoT "#################### END ${_PART}"


