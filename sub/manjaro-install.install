#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${S_RELEASE_ID}-${_PART}"

file_install_done=${_PATH_LOG}/install.done
file_install_pck=${S_PATH_CONF}/install.pck

cmd="sudo pacman -S --noconfirm --needed"

########################  MAIN

_echoT "================== ${_PART} / global install"

_echo "------------------"
sed -n '/# install/,$ p' ${S_FILE_INSTALL_CONF}|grep -v '^# install'
_echo "------------------"
_askyn "Confirm this installation options" && [ "${_ANSWER}" == n ] && return 1

part_install=system
_echot "------------------ ${part_install}"
packages="yay jre-openjdk tmux most net-tools htop multipath-tools squashfs-tools bind-tools bash-completion cdrtools" # base-devel unrar
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi

part_install=tools
_echot "------------------ ${part_install}"
packages="meld thunderbird gtk2fontsel baobab" # fslint activity-log-manager
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi

part_install=media
_echot "------------------ ${part_install}"
packages=" easytag soundconverter sound-juicer pulseaudio-equalizer simplescreenrecorder yt-dlp audacity" # easymp3gain-gtk2 mp3splt-gtk lollypop
packages+=" gimp gimp-nufraw gimp-plugin-gmic inkscape" # gimp-plugin-registry gimp-plugin-satequalizer gimp-plugin-duplicate-to-another-image gimp-plugin-saveforweb gimp-plugin-fblur gimp-plugin-lqr gimp-refocus gimp-plugin-wavelet-denoise xsane
packages+=" mpv mkvtoolnix-gui handbrake libdvdcss libdvdnav libdvdread"
packages+=" aegisub boost-libs" # xfce4-hardware-monitor-plugin
#packages+=" chromium amule" # tesseract tesseract-ocr-fra gnome-music isomaster mixxx lightzone darktable tangerine gnome-clocks
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi

part_install=languages
_echot "------------------ ${part_install}"
packages="hunspell-fr hyphen-fr mythes-fr firefox-i18n-fr thunderbird-i18n-fr"
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi

part_install=libreoffice
_echot "------------------ ${part_install}"
packages="libreoffice-fresh libreoffice-fresh-fr" # libreoffice-extension-texmaths libreoffice-extension-writer2latex
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
# libreoffice-dmaths libreoffice-librelogo libreoffice-style-breeze libreoffice-style-elementary libreoffice-style-sifr

part_install=python
_echot "------------------ ${part_install}"
packages="python3 python-pip"
if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi

packages="pip yt-dlp grip"
python3 -m pip install -U ${packages} || _exite "Unable to install: ${packages}"

if [ "${_LAPTOP}" ]; then
	part_install=laptop
	_echot "------------------ ${part_install}"
	packages="tlp tlp-rdw tlpui" # acpi
	if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
fi

if [ "${_VIDEO}" ]; then
	part_install=videos
	_echot "------------------ ${part_install}"
	packages="kdenlive cin" # flowblade lightworks Natron shotcut DaVinci Resolve
	if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
fi

if [ "${_DEV}" ]; then
	part_install=dev
	_echot "------------------ ${part_install}"
	packages="dstat sysstat tree jq atop mariadb-clients postgresql-libs percona-toolkit gitg vim"
	#packages+=" ghex pgadmin4 dbeaver dia dia2code dia-shapes postgresql-autodoc mytop percona-server-clients umbrello jxplorer gitkraken"
	#packages+=" kcachegrind pyprof2calltree graphviz xdot python-pydot"
	if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
fi

if [ "${_NETWORK}" ]; then
	part_install=network
	_echot "------------------ ${part_install}"
	packages="wireshark-qt nmap" # wireshark-gtk
	if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
fi

if [ "${_VIRTUALBOX}" ]; then
	part_install=virtualbox
	_echot "------------------ ${part_install}"
	packages="virtualbox"
	if ${cmd} ${packages}; then _partadd ${part_install} ${file_install_done} && _partadd "${packages}" ${file_install_pck}; else _echoE "Unable to install: ${packages}"; return 1; fi
fi

######################## required ${S_RELEASE_DESKTOP}

file="${_PATH_BASE_SUB}/${S_RELEASE_ID}-${_PART}-${S_RELEASE_DESKTOP}.install"
if [ -f "${file}" ]; then
	_echot "------------------ ${S_RELEASE_DESKTOP} required"
	! . "${file}" && echo "wrong '${_PART}-${S_RELEASE_DESKTOP}'" && exit
else
	_echoE "unable to find '${file}'"
fi

########################  END

_echoT "===================== ${_PART} end"
_partadd "${_PART}" "${S_FILE_INSTALL_DONE}"


<<KEEP
# remove media packages
#packages="chromium amule audacity easytag soundconverter sound-juicer lollypop pulseaudio-equalizer gimp-nufraw gimp-plugin-fblur gimp-plugin-gmic gimp-plugin-lqr gimp-plugin-wavelet-denoise gimp-refocus inkscape xsane mpv totem mkvtoolnix-gui handbrake libdvdcss libdvdnav libdvdread"
#sudo pacman -Rs ${packages}
#sudo pacman -R $(pacman -Qdtq)
KEEP
